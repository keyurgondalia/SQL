
dbcc sqlperf(logspace)
--High Availability Terminology
--ClusteringTwo type of Clusters   1. Active/Active Cluster2. Active/Passive Cluster Above configuration needs two servers
--Mirroring( Requires 2 servers if one fails the other takes over )
--Log Shipping( Involves 2 servers if one fails other takes over )
SQL Server Editions-- MS SQL Server 2008 R2 ( Release 2 ) Enterprise Edition-- MS SQL Server 2008 R2 (Release 2 ) Standard Edition-- MS SQL Server 2008 R2 (Release 2)  Developer Edition-- MS SQL Server 2008 R2 (Release 2 ) Express Edition
-- MS SQL Server 2008 Enterprise Edition-- MS SQL Server 2008 Standard Edition-- MS SQL Server 2008 Developer Edition-- MS SQL Server 2008 Express Edition
-- MS SQL Server 2005 Enterprise Edition-- MS SQL Server 2005 Standard Edition-- MS SQL Server 2005 Developer Edition-- MS SQL Server 2005 Express Edition
-- MS SQL Server 2000 Enterprise Edition-- MS SQL Server 2000 Standard Edition-- MS SQL Server 2000 Developer Edition-- MS SQL Server 2000 Express Edition
Windows Server Editions
Microsoft Windows Server 2008 R2 ( Release 2 )Microsoft Windows Server 2008 Microsoft Windows Server 2003Microsoft Windows Server 2000
Microsoft SQL Server Licensing
Per User basedProcessor based licensing

-- Creating Linked Servers
EXEC master.dbo.sp_addlinkedserver @server = N'YRSWEBNYC\YRSYERDINYC', @srvproduct=N'SQL Server'GO
USE [master]GOEXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname = N'YRSWEBNYC\YRSYERDINYC', @locallogin = NULL , @useself = N'False', @rmtuser = N'sqldba', @rmtpassword = N'sqldba'GO
-- getting a list of linked serverselect * from sysservers
-- Connecting to Windows Servermstsc /adminenter the ip address or the server name
-- For Ping-- ipconfig-- ping ipaddress
-- SQL Version information for current instanceSELECT @@VERSION AS [SQL Version Info];
-- Hardware Information For SQL Server 2008
SELECT cpu_count AS [Logical CPU Count], hyperthread_ratio AS [Hyperthread Ratio],cpu_count/hyperthread_ratio AS [Physical CPU Count],physical_memory_in_bytes/1048576 AS [Physical Memory (MB)]FROM sys.dm_os_sys_info;
-- Get configuration values for instance
SELECT name, value, value_in_use, [description]FROM sys.configurationsORDER BY name ;
-- File Names and Paths for TempDB and all user databases in instance
SELECT DB_NAME([database_id])AS [Database Name], [file_id],       name, physical_name, case type_desc when 'ROWS' then 'Data File' else 'Log File' end as 'FileType',convert(numeric(18,2),size/128.0) as 'Database Size in MB',       convert(numeric(18,2),size/128.0/1024) as 'Database Size in GB'FROM sys.master_filesWHERE [database_id] > 4 AND [database_id] <> 32767OR [database_id] = 2order by database_id, file_id
-- Recovery model, log reuse wait description, and compatibility level for all databases on instanceSELECT [name], recovery_model_desc, log_reuse_wait_desc, [compatibility_level]FROM sys.databases;
-- Things to look at-- How many databases are on the instance?-- What recovery models are they using?-- What is the log reuse wait description?-- What compatibility level are they on?
-- The query below will give a list of all databases and there log files and how much logspace is used 
SELECT db.[name] AS [Database Name], db.recovery_model_desc AS [Recovery Model], --db.log_reuse_wait_desc AS [Log Reuse Wait Description], ls.cntr_value/1024 AS [Log Size (MB)], lu.cntr_value/1024 AS [Log Used (MB)],CAST(CAST(lu.cntr_value AS FLOAT) / CAST(ls.cntr_value AS FLOAT)AS DECIMAL(18,2)) * 100 AS [Log Used %]--db.[compatibility_level] AS [DB Compatibility Level], --db.page_verify_option_desc AS [Page Verify Option]FROM sys.databases AS dbINNER JOIN sys.dm_os_performance_counters AS lu ON db.name = lu.instance_nameINNER JOIN sys.dm_os_performance_counters AS ls ON db.name = ls.instance_nameWHERE lu.counter_name LIKE N'Log File(s) Used Size (KB)%' AND ls.counter_name LIKE N'Log File(s) Size (KB)%'AND ls.cntr_value > 0;
-- The query has to be run in individual database-- The query will give you the database file size and how much space is free in individual files
SELECT name AS [File Name] , physical_name AS [Physical Name], convert(numeric(18,2),size/128.0) AS [Total Size in MB],convert(numeric(18,2),size/128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0) AS [Available Space In MB], convert(numeric(18,2),convert(numeric(18,2),size/128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0) * 100 / convert(numeric(18,2),size/128.0)) as 'Percent Free',[file_id],GETDATE()FROM sys.database_files;
-- Get Table names, row counts, and compression status for clustered index or heap
SELECT OBJECT_NAME(object_id) AS [ObjectName], SUM(Rows) AS [RowCount]FROM sys.partitions WHERE index_id < 2 --ignore the partitions from the non-clustered index if anyAND OBJECT_NAME(object_id) NOT LIKE 'sys%'AND OBJECT_NAME(object_id) NOT LIKE 'queue_%' AND OBJECT_NAME(object_id) NOT LIKE 'filestream_tombstone%' GROUP BY object_id, data_compression_descORDER BY SUM(Rows) DESC;
-- To shrink the size of a database file
select * from sysfiles-- get the filename which you want to shrink--  use databasenamedbcc shrinkfile (logfilename,10) 
ex: dbcc shrinkfile(etldata,10)--the etldata logocal file will be shrinked to 100 MB
-- Command to backup the database-- replace YRS with C:\sqldata\yrs.bak-- or create a device YRS which points to C:\SQLdata\yrs.bak
BACKUP DATABASE [YRS] TO [YRS] WITH  INIT ,  NOUNLOAD ,  NAME = N'YRS backup Before Maintenance',  NOSKIP ,  STATS = 10,  NOFORMATgo
--  Query to get the machine name and other information for SQL Server
SELECT  CAST(SERVERPROPERTY('MachineName') AS varchar(30)) as MachineName ,  CAST( SERVERPROPERTY('InstanceName') AS varchar(30)) AS Instance , CAST( SERVERPROPERTY('ProductVersion') AS varchar(30)) AS ProductVersion ,  CAST( SERVERPROPERTY( 'ProductLevel' ) AS varchar( 30 ) ) AS ProductLevel ,  CAST( SERVERPROPERTY( 'Edition' ) AS varchar( 30 ) ) AS Edition ,   (CASE SERVERPROPERTY( 'EngineEdition')    WHEN 1  THEN 'Personal or Desktop'    WHEN 2 THEN 'Standard'    WHEN 3 THEN 'Enterprise' END ) AS EngineType , CAST( SERVERPROPERTY( 'LicenseType' ) AS varchar( 30 ) ) AS LicenseType ,     SERVERPROPERTY( 'NumLicenses' ) AS NO_OF_Licenses 
-- To check the consistency of a database
--dbcc checkdb(yrs)select GETDATE()
-- To get a List Of Tables and the Indexes on it
SELECT USER_NAME( OBJECTPROPERTY( i.id, 'OwnerID' ) )                AS OwnerName,     OBJECT_NAME( i.id ) AS TableName,  i.name AS IndexName,      CASE INDEXPROPERTY( i.id , i.name , 'IsClustered')             WHEN 1 THEN 'YES'             ELSE 'NO'      END AS IsClustered,      CASE INDEXPROPERTY( i.id , i.name , 'IsUnique'    )         WHEN 1 THEN 'YES'            ELSE 'NO'      END AS IsUnique,      STATS_DATE( i.id , i.indid ) AS LastUpdatedDate  FROM sysindexes AS iWHERE OBJECTPROPERTY( i.id, 'IsMSShipped' ) = 0 And      1 NOT IN ( INDEXPROPERTY( i.id , i.name , 'IsStatistics'   ) ,          INDEXPROPERTY( i.id , i.name , 'IsAutoStatistics' ) ,          INDEXPROPERTY( i.id , i.name , 'IsHypothetical'   ) ) And      i.indid BETWEEN 1 And 250ORDER BY OwnerName, TableName, IndexName,ISClustered
-- Useful commandssp_who2
-- command to get a list of all indexes on a tablesp_helpindex atstransacts     
-- command to get all columns of tablesp_columns <tablename>
-- This statement will give you detailed information about a tablesp_help <tablename>
-- To find out the space usage for a Tablesp_spaceused <tablename>


-- The Query will give you a list of all the database and when they were backed upSELECT T1.Name as DatabaseName, COALESCE(Convert(varchar(12), MAX(T2.backup_finish_date), 101),'Not Yet Taken') as LastBackUpTaken,COALESCE(Convert(varchar(12), MAX(T2.user_name), 101),'NA') as UserName,T3.physical_device_nameFROM sys.sysdatabases T1 LEFT OUTER JOIN msdb.dbo.backupset T2ON T2.database_name = T1.name inner join msdb.dbo.backupmediafamily T3 on T2.media_set_id = T3.media_set_idGROUP BY T1.Name,T3.physical_device_nameORDER BY T1.Name,LastBackUpTaken
-- The Query Below will give you only the database which were last backed upselect Database_name,COALESCE(Convert(varchar(20), MAX(backup_finish_date), 101),'Backup Not Taken') asLastBackUpTakenDate,COALESCE(Convert(varchar(20), MAX(user_name), 101),'NA') as BackupTakenUserfrom msdb.dbo.backupset GROUP BY Database_name

-- Installation-- patches-- Database Creatioon-- Documentationsp_helpdbselect * from sysloginsselect * from sysjobsselect name, xtype as 'Procedure' from sysobjectswhere xtype = 'P'
-- Database Management-- Server Management-- Database Design-- Database Troubleshooting
sp_who2 
-- Security ( Windows / SQL Server )-- assigning Rights-- SQL Server Agent Jobs ( Creation, Management )-- Staring Stoping SQL Server
-- Upgrades -- select * from sysdatabases --  backup / restore database --  Copy agent jobs -- Copy all logins -- Creating backup / recovery-- Maintenance Jobs
dbcc checkdb
-- DMV's, Performance Tuning
-- SSIS Packages , creation , scheduling-- SSRS reports-- SSAS 
-- Scripts for all above tasks-- Clustering , Mirroring, Log Shipping, -- Replication-- Snapshot, Transactional, Merge, Peer-- PUBLISHER / DISTRIBUTOR / SUBSCRIBER-- ARTICLES
-- Management of the above
