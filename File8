
-- To get a count of Number of CPU, and Physical Memory-- The query should be run in master dataabseSELECT cpu_count AS [Logical CPU Count], hyperthread_ratio AS [Hyperthread Ratio],cpu_count/hyperthread_ratio AS [Physical CPU Count],physical_memory_in_bytes/1048576 AS [Physical Memory (MB)]FROM sys.dm_os_sys_info;
-- File Names and Paths for TempDB and all user databases in instance-- SELECT DB_NAME([database_id])AS [Database Name], [file_id],       name, physical_name, case type_desc when 'ROWS' then 'Data File' else 'Log File' end as 'FileType',size/128.0 as 'Database Size in MB'FROM sys.master_filesWHERE [database_id] > 4 AND [database_id] <> 32767OR [database_id] = 2order by database_id, file_id
-- backup log personal with no_log
-- The query will give you all the database name and the recovery model they are in-- A Full recovery model means Transaction Log will not get truncated-- In a Simple recovery model the transaction log will get truncatedSELECT [name], recovery_model_desc, log_reuse_wait_desc, [compatibility_level]FROM sys.databases;
-- The query below will give a list of all databases and there log files and how much logspace is used 
SELECT db.[name] AS [Database Name], db.recovery_model_desc AS [Recovery Model], db.log_reuse_wait_desc AS [Log Reuse Wait Description], ls.cntr_value AS [Log Size (KB)], lu.cntr_value AS [Log Used (KB)],CAST(CAST(lu.cntr_value AS FLOAT) / CAST(ls.cntr_value AS FLOAT)AS DECIMAL(18,2)) * 100 AS [Log Used %]FROM sys.databases AS dbINNER JOIN sys.dm_os_performance_counters AS lu ON db.name = lu.instance_nameINNER JOIN sys.dm_os_performance_counters AS ls ON db.name = ls.instance_nameWHERE lu.counter_name LIKE N'Log File(s) Used Size (KB)%' AND ls.counter_name LIKE N'Log File(s) Size (KB)%'AND ls.cntr_value > 0;
-- To find the files and shrink the filesselect * from sysfilesdbcc shrinkfile(Personal,20)
-- The Query will give you a list of all the database and when they were backed upSELECT T1.Name as DatabaseName, COALESCE(Convert(varchar(12), MAX(T2.backup_finish_date), 101),'Not Yet Taken') as LastBackUpTaken,COALESCE(Convert(varchar(12), MAX(T2.user_name), 101),'NA') as UserName,T3.physical_device_nameFROM sys.sysdatabases T1 LEFT OUTER JOIN msdb.dbo.backupset T2ON T2.database_name = T1.name inner join msdb.dbo.backupmediafamily T3 on T2.media_set_id = T3.media_set_idGROUP BY T1.Name,T3.physical_device_nameORDER BY T1.Name
-- The Query Below will give you only the database which were last backed upselect Database_name,COALESCE(Convert(varchar(20), MAX(backup_finish_date), 101),'Backup Not Taken') asLastBackUpTakenDate,COALESCE(Convert(varchar(20), MAX(user_name), 101),'NA') as BackupTakenUserfrom msdb.dbo.backupset GROUP BY Database_name
-- Gives you a list of Tables with the No Of Rows-- You should be in the database where you want to find the tables and no of rowsSELECT OBJECT_NAME(object_id) AS [ObjectName], SUM(Rows) AS [RowCount]FROM sys.partitions WHERE index_id < 2 --ignore the partitions from the non-clustered index if anyAND OBJECT_NAME(object_id) NOT LIKE 'sys%'AND OBJECT_NAME(object_id) NOT LIKE 'queue_%' AND OBJECT_NAME(object_id) NOT LIKE 'filestream_tombstone%' GROUP BY object_idORDER BY SUM(Rows) DESC;
-- To shrink the size of a database file
select * from sysfiles-- get the filename which you want to shrink--  --use databasename--dbcc shrinkfile (logfilename,10) 
--dbcc shrinkfile(etldata,100)--the etldata logocal file will be shrinked to 100 MB
--BACKUP DATABASE [YRS] TO [LocalDisk] WITH  INIT ,  NOUNLOAD ,  NAME = N'YRS backup Before Maintenance',  NOSKIP ,  STATS = 10,  NOFORMAT--go
-- To Find Out the version of SQL Server and the licenses on it
SELECT  CAST(SERVERPROPERTY('MachineName') AS varchar(30)) as MachineName ,  CAST( SERVERPROPERTY('InstanceName') AS varchar(30)) AS Instance , CAST( SERVERPROPERTY('ProductVersion') AS varchar(30)) AS ProductVersion ,  CAST( SERVERPROPERTY( 'ProductLevel' ) AS varchar( 30 ) ) AS ProductLevel ,  CAST( SERVERPROPERTY( 'Edition' ) AS varchar( 30 ) ) AS Edition ,   (CASE SERVERPROPERTY( 'EngineEdition')    WHEN 1  THEN 'Personal or Desktop'    WHEN 2 THEN 'Standard'    WHEN 3 THEN 'Enterprise' END ) AS EngineType , CAST( SERVERPROPERTY( 'LicenseType' ) AS varchar( 30 ) ) AS LicenseType ,     SERVERPROPERTY( 'NumLicenses' ) AS NO_OF_Licenses  
--dbcc checkdb(personal)-- sp_who2
-- command to get a list of all indexes on a tablesp_helpindex  salary
-- To get a List Of Tables and the Indexes on it
SELECT USER_NAME( OBJECTPROPERTY( i.id, 'OwnerID' ) )                AS OwnerName,     OBJECT_NAME( i.id ) AS TableName,  i.name AS IndexName,      CASE INDEXPROPERTY( i.id , i.name , 'IsClustered')             WHEN 1 THEN 'YES'             ELSE 'NO'      END AS IsClustered,      CASE INDEXPROPERTY( i.id , i.name , 'IsUnique'    )         WHEN 1 THEN 'YES'            ELSE 'NO'      END AS IsUnique,      STATS_DATE( i.id , i.indid ) AS LastUpdatedDate  FROM sysindexes AS iWHERE OBJECTPROPERTY( i.id, 'IsMSShipped' ) = 0 And      1 NOT IN ( INDEXPROPERTY( i.id , i.name , 'IsStatistics'   ) ,          INDEXPROPERTY( i.id , i.name , 'IsAutoStatistics' ) ,          INDEXPROPERTY( i.id , i.name , 'IsHypothetical'   ) ) And      i.indid BETWEEN 1 And 250ORDER BY OwnerName, TableName, IndexName,ISClustered
-- The Query can can be SELECT name AS [File Name] , physical_name AS [Physical Name], size/128.0 AS [Total Size in MB],size/128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0 AS [Available Space In MB], [file_id]FROM sys.database_files;
-- The query will give you all system related parameters for the SQL Server-- The query should be run in master dataabseSELECT name, value, value_in_use, [description]FROM sys.configurationsORDER BY name ;
select  a.name as 'TableName', b.name as 'IndexName', from sysobjects a inner join sysindexes b on a.id = b.idwhere a.id = 
