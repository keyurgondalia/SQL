-- The Query will give you a list of all the database and when they were backed upSELECT T1.Name as DatabaseName, COALESCE(Convert(varchar(12), MAX(T2.backup_finish_date), 101),'Not Yet Taken') as LastBackUpTaken,COALESCE(Convert(varchar(12), MAX(T2.user_name), 101),'NA') as UserName,T3.physical_device_nameFROM sys.sysdatabases T1 LEFT OUTER JOIN msdb.dbo.backupset T2ON T2.database_name = T1.name inner join msdb.dbo.backupmediafamily T3 on T2.media_set_id = T3.media_set_idGROUP BY T1.Name,T3.physical_device_nameORDER BY T1.Name
-- The Query Below will give you only the database which were last backed upselect Database_name,COALESCE(Convert(varchar(20), MAX(backup_finish_date), 101),'Backup Not Taken') asLastBackUpTakenDate,COALESCE(Convert(varchar(20), MAX(user_name), 101),'NA') as BackupTakenUserfrom msdb.dbo.backupset GROUP BY Database_name
RESTORE VERIFYONLY  FROM DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'
RESTORE VERIFYONLY  FROM DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'
-- The following example returns the information in the header for the disk file
RESTORE HEADERONLY FROM DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK',DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'DISK='D:\Others\STOCKGAME Server\LED_STOCK.BAK'WITH NOUNLOAD;GO
select T1.Name as DatabaseName,  Convert(varchar(12),T2.backup_finish_date, 101) as LastBackUpTaken, T3.physical_device_name as Physical_Device_Name FROM sysdatabases T1 LEFT OUTER JOIN msdb.dbo.backupset T2 ON T2.database_name = T1.name inner join msdb.dbo.backupmediafamily T3 on T2.media_set_id = T3.media_set_id   inner join    (    select Databasename, max(LastBackUpTaken) as Bkp    from    (     SELECT D1.Name as DatabaseName,      COALESCE(Convert(varchar(12), MAX(D2.backup_finish_date), 101),'Not Yet Taken') as LastBackUpTaken     FROM sysdatabases D1 LEFT OUTER JOIN msdb.dbo.backupset D2     ON D2.database_name = D1.name inner join msdb.dbo.backupmediafamily D3 on D2.media_set_id = D3.media_set_id     GROUP BY D1.Name,D3.physical_device_name    ) b    GROUP BY b.Databasename   ) temp on T1.name = temp.Databasename   and Convert(varchar(12),T2.backup_finish_date, 101) = temp.Bkp   order by T1.Name
select T1.Name as DatabaseName,  Convert(varchar(12),T2.backup_finish_date, 101) as LastBackUpTaken, T3.physical_device_name as Physical_Device_Name FROM sysdatabases T1 LEFT OUTER JOIN msdb.dbo.backupset T2 ON T2.database_name = T1.name inner join msdb.dbo.backupmediafamily T3 on T2.media_set_id = T3.media_set_id   inner join    (    select Databasename, max(LastBackUpTaken) as Bkp    from    (     SELECT D1.Name as DatabaseName,      COALESCE(Convert(varchar(12), MAX(D2.backup_finish_date), 101),'Not Yet Taken') as LastBackUpTaken     FROM sysdatabases D1 LEFT OUTER JOIN msdb.dbo.backupset D2     ON D2.database_name = D1.name inner join msdb.dbo.backupmediafamily D3 on D2.media_set_id = D3.media_set_id     where d2.type = 'D'     GROUP BY D1.Name,D3.physical_device_name    ) b    GROUP BY b.Databasename   ) temp on T1.name = temp.Databasename   and Convert(varchar(12),T2.backup_finish_date, 101) = temp.Bkp   and t2.type = 'D'   order by T1.Name
SELECT Database_Name,     CONVERT( SmallDateTime , MAX(Backup_Finish_Date)) as Last_Backup,     --DATEDIFF(d, MAX(Backup_Finish_Date),Getdate()) as Days_Since_Last,   b.physical_device_name as Physical_Device_Name FROM MSDB.dbo.BackupSet a inner join msdb.dbo.backupmediafamily b on a.media_set_id = b.media_set_idWHERE Type = 'd'GROUP BY Database_Name,b.physical_device_nameORDER BY Database_Name,Last_Backup DESCGo
****
SELECT serverproperty('servername') as [Server Name], serverproperty('ProductVersion') as [SQL Version],   --CONVERT(CHAR(100), SERVERPROPERTY('Servername')) AS Server,   msdb.dbo.backupset.database_name,   msdb.dbo.backupset.backup_start_date,   msdb.dbo.backupset.backup_finish_date,   --msdb.dbo.backupset.expiration_date,   CASE msdb..backupset.type       WHEN 'D' THEN 'Database'       WHEN 'L' THEN 'Log'       WHEN 'I' THEN 'Differential'   END AS backup_type,   msdb.dbo.backupset.backup_size,   msdb.dbo.backupmediafamily.logical_device_name,   msdb.dbo.backupmediafamily.physical_device_name,    msdb.dbo.backupset.name AS backupset_name,   msdb.dbo.backupset.descriptionFROM   msdb.dbo.backupmediafamily   INNER JOIN msdb.dbo.backupset ON msdb.dbo.backupmediafamily.media_set_id = msdb.dbo.backupset.media_set_idWHERE msdb..backupset.type in ('D','L','I') and (CONVERT(datetime, msdb.dbo.backupset.backup_start_date, 102) >= GETDATE() - 1) --and msdb.dbo.backupset.database_name = 'China'or msdb..backupset.type in ('D','L','I') and (CONVERT(datetime, msdb.dbo.backupset.backup_start_date, 102) >= GETDATE() - 1) --and msdb.dbo.backupset.database_name = 'GMT-China'ORDER BY   msdb.dbo.backupset.database_name,   msdb.dbo.backupset.backup_finish_date


